@model FinalProject.Models.Item

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Item</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tag)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tag)
        </dd>
    </dl>
</div>

<div>
    @if (SignInManager.IsSignedIn(User) && User.Identity.Name.ToString() == Model.User_Name)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    | <a asp-controller="Items" asp-action="ShowItems" asp-route-id="@Model.CollectionID">Back to List</a>
</div>

@if (SignInManager.IsSignedIn(User))
{
    <div class="likes-section">
        @{
            await Html.RenderPartialAsync("Likes", new Like { ItemID = Model.Id });
        }
        <p class="font-weight-bold">@Model.Likes.Count() likes</p>
    </div>   
    <hr />
    <h2>Comments</h2>
    <hr />
    <div class="comment-section">
        @{
            await Html.RenderPartialAsync("Comments", new Comment { ItemID = Model.Id });
        }
        @foreach (var c in Model.Comments)
        {
            <p class="font-weight-bold">@c.User_Name</p>
            <p class="font-weight-normal">@c.Text</p>
            <hr />
        }
    </div>
}
